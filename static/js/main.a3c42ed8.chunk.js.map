{"version":3,"sources":["logo.svg","components/Clock.tsx","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","date","Date","toggle","intervalFunc","setState","setInterval","this","id","e","console","log","toLocaleTimeString","onClick","handelEvent","bind","React","App","variable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,YCEMA,E,kDAQjB,WAAYC,GAAW,IAAD,8BAClB,cAAMA,IANVC,MAAQ,CACJC,KAAO,IAAIC,KACXC,QAAS,GAGS,EAStBC,aAAe,WACX,EAAKC,SAAS,CAACJ,KAAO,IAAIC,QAR1B,EAAKF,MAAMC,KAAO,IAAIC,KAFJ,E,qDAKtB,WACII,YAAYC,KAAKH,aAAc,O,yBAOnC,SAAYI,EAASC,GACjBC,QAAQC,IAAIF,GACZF,KAAKF,SAAS,CACVF,QAAUI,KAAKP,MAAMG,W,oBAI7B,WACI,OACI,gCACI,6CAAgBI,KAAKP,MAAMC,KAAKW,wBAChC,wBAAQC,QAASN,KAAKO,YAAYC,KAAKR,KAAM,GAA7C,uBACA,6BAAMA,KAAKP,MAAMG,OAAS,MAAQ,c,GAjCfa,aCIdC,E,4MAEnBC,SAAW,W,4CAEX,WACE,OACA,8BACE,cAAC,EAAD,U,GAP2BF,aCMlBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3c42ed8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from 'react';\r\n\r\nexport default class Clock extends React.Component {\r\n\r\n\r\n    state = {\r\n        date : new Date(),\r\n        toggle : false ,\r\n    }\r\n    \r\n    constructor(props:any){\r\n        super(props) ;\r\n        this.state.date = new Date() ;\r\n    }\r\n\r\n    componentDidMount(){\r\n        setInterval(this.intervalFunc, 1000);\r\n    }\r\n    \r\n    intervalFunc = () =>{\r\n        this.setState({date : new Date()}) ;\r\n    }\r\n\r\n    handelEvent(id: any, e: any){\r\n        console.log(e) ;\r\n        this.setState({\r\n            toggle : !this.state.toggle\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>Time is : {this.state.date.toLocaleTimeString()}</div>\r\n                <button onClick={this.handelEvent.bind(this, 1)}>Click ME </button>\r\n                <h3>{ this.state.toggle ? \"Yes\" : \"No\" }</h3>\r\n            </div>            \r\n        )\r\n    }\r\n\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport * as React from 'react';\nimport Clock from './components/Clock';\n\n\nexport default class App extends React.Component {\n  \n  variable = \"prasanna\" ;\n\n  render() {\n    return (\n    <div >\n      <Clock />\n    </div>\n  );\n}\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}